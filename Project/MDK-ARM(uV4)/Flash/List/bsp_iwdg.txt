; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outupt\bsp_iwdg.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=..\outupt\bsp_iwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\outupt\bsp_iwdg.crf ..\..\User\bsp\src\bsp_iwdg.c]
                          THUMB

                          AREA ||i.IWDG_Feed||, CODE, READONLY, ALIGN=1

                  IWDG_Feed PROC
;;;98     */
;;;99     void IWDG_Feed(void)
000000  b510              PUSH     {r4,lr}
;;;100    {
;;;101    	IWDG_ReloadCounter();
000002  f7fffffe          BL       IWDG_ReloadCounter
;;;102    }
000006  bd10              POP      {r4,pc}
;;;103    
                          ENDP


                          AREA ||i.bsp_InitIwdg||, CODE, READONLY, ALIGN=1

                  bsp_InitIwdg PROC
;;;37     */
;;;38     void bsp_InitIwdg(uint32_t _ulIWDGTime)
000000  b510              PUSH     {r4,lr}
;;;39     {
000002  4604              MOV      r4,r0
;;;40     		
;;;41     	/* 检测系统是否从独立看门狗复位中恢复 */
;;;42     	if (RCC_GetFlagStatus(RCC_FLAG_IWDGRST) != RESET)
000004  207d              MOVS     r0,#0x7d
000006  f7fffffe          BL       RCC_GetFlagStatus
00000a  b108              CBZ      r0,|L2.16|
;;;43     	{		
;;;44     		/* 清除复位标志 */
;;;45     		RCC_ClearFlag();
00000c  f7fffffe          BL       RCC_ClearFlag
                  |L2.16|
;;;46     	}
;;;47     	else
;;;48     	{
;;;49     		/* 标志没有设置 */
;;;50     
;;;51     	}
;;;52     	
;;;53     // #if 1
;;;54     // 	/* 通过TIM5输入捕获得到LSI频率 */
;;;55     // 	LsiFreq = GetLSIFrequency();
;;;56     // #else
;;;57     // 	/* 使能LSI */
;;;58     // 	RCC_LSICmd(ENABLE);
;;;59     // 	
;;;60     // 	/* 等待直到LSI就绪 */
;;;61     // 	while (RCC_GetFlagStatus(RCC_FLAG_LSIRDY) == RESET)
;;;62     // 	{}
;;;63     // 	
;;;64     //     /* */		
;;;65     // 	LsiFreq = 32000;
;;;66     // #endif
;;;67     	
;;;68     	/* 写入0x5555表示允许访问IWDG_PR 和IWDG_RLR寄存器 */
;;;69     	IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
000010  f2455055          MOV      r0,#0x5555
000014  f7fffffe          BL       IWDG_WriteAccessCmd
;;;70     	
;;;71     	/*  LSI/32 分频*/
;;;72     	IWDG_SetPrescaler(IWDG_Prescaler_32);
000018  2003              MOVS     r0,#3
00001a  f7fffffe          BL       IWDG_SetPrescaler
;;;73     	
;;;74     	/*特别注意，由于这里_ulIWDGTime的最小单位是ms, 所以这里重装计数的
;;;75     	  计数时 需要除以1000
;;;76     	 Counter Reload Value = (_ulIWDGTime / 1000) /(1 / IWDG counter clock period)
;;;77     	                      = (_ulIWDGTime / 1000) / (32/LSI)
;;;78     	                      = (_ulIWDGTime / 1000) / (32/LsiFreq)
;;;79     	                      = LsiFreq * _ulIWDGTime / 32000
;;;80     	 实际测试LsiFreq = 34000，所以这里取1的时候 大概就是1ms 
;;;81     	*/
;;;82     	IWDG_SetReload(_ulIWDGTime);
00001e  b2a0              UXTH     r0,r4
000020  f7fffffe          BL       IWDG_SetReload
;;;83     	
;;;84     	/* 重载IWDG计数 */
;;;85     	IWDG_ReloadCounter();
000024  f7fffffe          BL       IWDG_ReloadCounter
;;;86     	
;;;87     	/* 使能 IWDG (LSI oscillator 由硬件使能) */
;;;88     	IWDG_Enable();		
000028  f7fffffe          BL       IWDG_Enable
;;;89     }
00002c  bd10              POP      {r4,pc}
;;;90     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  LsiFreq
                          DCD      0x00000000
                  CaptureNumber
                          DCD      0x00000000
                  PeriodValue
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_iwdg.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_bsp_iwdg_c_LsiFreq____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_iwdg_c_LsiFreq____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_bsp_iwdg_c_LsiFreq____REVSH|
#line 128
|__asm___10_bsp_iwdg_c_LsiFreq____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
