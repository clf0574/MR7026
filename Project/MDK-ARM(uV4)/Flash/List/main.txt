; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outupt\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=..\outupt\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\outupt\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.AppTask_BusMonitor||, CODE, READONLY, ALIGN=2

                  AppTask_BusMonitor PROC
;;;123    //×ÜÏß¼à¿Ø³ÌÐò£¬²»¿É¶ÂÈû£¬Ã¿1mSµ÷ÓÃÒ»´Î
;;;124    void AppTask_BusMonitor(void)
000000  4810              LDR      r0,|L1.68|
;;;125    {
;;;126    
;;;127    	if(Bus.distime>0)Bus.distime--;															//×ÜÏß½ûÖ¹Ê±¼ä
000002  88c0              LDRH     r0,[r0,#6]  ; Bus
000004  2800              CMP      r0,#0
000006  dd04              BLE      |L1.18|
000008  480e              LDR      r0,|L1.68|
00000a  88c0              LDRH     r0,[r0,#6]  ; Bus
00000c  1e40              SUBS     r0,r0,#1
00000e  490d              LDR      r1,|L1.68|
000010  80c8              STRH     r0,[r1,#6]
                  |L1.18|
;;;128    	//if(Bus.interval<10)Bus.interval++;													//×ÜÏßÖ¡Ö®¼ä¼ä¸ôÊ±¼ä
;;;129    	if(Bus.time<200)Bus.time++;																	//×ÜÏß¿ÕÏÐÊ±¼ä
000012  480c              LDR      r0,|L1.68|
000014  7880              LDRB     r0,[r0,#2]  ; Bus
000016  28c8              CMP      r0,#0xc8
000018  da04              BGE      |L1.36|
00001a  480a              LDR      r0,|L1.68|
00001c  7880              LDRB     r0,[r0,#2]  ; Bus
00001e  1c40              ADDS     r0,r0,#1
000020  4908              LDR      r1,|L1.68|
000022  7088              STRB     r0,[r1,#2]
                  |L1.36|
;;;130    	if(Bus.timeout<250)Bus.timeout++;
000024  4807              LDR      r0,|L1.68|
000026  7a40              LDRB     r0,[r0,#9]  ; Bus
000028  28fa              CMP      r0,#0xfa
00002a  da04              BGE      |L1.54|
00002c  4805              LDR      r0,|L1.68|
00002e  7a40              LDRB     r0,[r0,#9]  ; Bus
000030  1c40              ADDS     r0,r0,#1
000032  4904              LDR      r1,|L1.68|
000034  7248              STRB     r0,[r1,#9]
                  |L1.54|
;;;131    	Dev.rand++;	
000036  4804              LDR      r0,|L1.72|
000038  79c0              LDRB     r0,[r0,#7]  ; Dev
00003a  1c40              ADDS     r0,r0,#1
00003c  4902              LDR      r1,|L1.72|
00003e  71c8              STRB     r0,[r1,#7]
;;;132    	
;;;133    
;;;134    // 	 //Õâ¸ö³£Á¿È¡µÃ¹ý´ó£¬»áÊ¹×Ô·¢×ÔÊÕºÍÓ¦´ð·½µÄÓ¦´ðÕ³ºÏÔÚÒ»Æð¡£
;;;135    // 	 //µ«¹ýÐ¡µÄ»°£¬Èç¹û·¢ËÍ·½·¢ËÍÊ±ÓÐÖÐ¶Ïµ¼ÖÂÒ»Ö¡Êý¾ÝÓÐÐ¡¼ä¸ô£¬ÕâÀï»á¿´×öÊÇÁ½Ö¡£¬¶øÒýÆð´íÎó¡  ²âÊÔÊ±ÖØµã²âÊÔ
;;;136    //   if(Bus.interval==2)
;;;137    // 	{
;;;138    // 		Bsp_Get_UsartData(&RxDat.buf[0],&RxDat.cnt);
;;;139    // 		Bus.rxok=1;																								//½ÓÊÕµ½Ò»Ö¡Êý¾Ý
;;;140    // 	}	
;;;141    }
000040  4770              BX       lr
;;;142    //===============================================================================================
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
                          DCD      Bus
                  |L1.72|
                          DCD      ||Dev||

                          AREA ||i.AppTask_RivalrySend||, CODE, READONLY, ALIGN=1

                  AppTask_RivalrySend PROC
;;;80     */
;;;81     void AppTask_RivalrySend(void)
000000  b510              PUSH     {r4,lr}
;;;82     {
;;;83     		IT1_SendData();
000002  f7fffffe          BL       IT1_SendData
;;;84     }
000006  bd10              POP      {r4,pc}
;;;85     
                          ENDP


                          AREA ||i.AppTask_Run||, CODE, READONLY, ALIGN=2

                  AppTask_Run PROC
;;;202    */
;;;203    void AppTask_Run(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;204    {
;;;205    	static uint8_t t10ms,t100ms;
;;;206    	static uint8_t ttest;
;;;207    	uint8_t key,i,lin,row;
;;;208    		
;;;209    	t10ms++;
000002  489a              LDR      r0,|L3.620|
000004  7800              LDRB     r0,[r0,#0]  ; t10ms
000006  1c40              ADDS     r0,r0,#1
000008  4998              LDR      r1,|L3.620|
00000a  7008              STRB     r0,[r1,#0]
;;;210    	bsp_KeyScan();													//°´¼üÂÖÑ¯
00000c  f7fffffe          BL       bsp_KeyScan
;;;211    	led_run();
000010  f7fffffe          BL       led_run
;;;212    	
;;;213    	IT1_IR_LoadToWireless(Ir.addr);					//·Ö°üÊý¾Ý·¢ËÍ
000014  4996              LDR      r1,|L3.624|
000016  7808              LDRB     r0,[r1,#0]  ; Ir
000018  f7fffffe          BL       IT1_IR_LoadToWireless
;;;214    	
;;;215    	
;;;216    	//============================================================
;;;217    	//×¢²á¼ä¸ôºÍÉÁË¸´¦Àí
;;;218    	if(Dev.stu==DEV_REGISTER)
00001c  4895              LDR      r0,|L3.628|
00001e  7980              LDRB     r0,[r0,#6]  ; Dev
000020  2801              CMP      r0,#1
000022  d11c              BNE      |L3.94|
;;;219    	{
;;;220    				if(Reg.wait==0)
000024  4894              LDR      r0,|L3.632|
000026  7840              LDRB     r0,[r0,#1]  ; Reg
000028  b980              CBNZ     r0,|L3.76|
;;;221    				{
;;;222    						Reg.time=Reg.cnt*4;
00002a  4893              LDR      r0,|L3.632|
00002c  7800              LDRB     r0,[r0,#0]  ; Reg
00002e  0080              LSLS     r0,r0,#2
000030  4991              LDR      r1,|L3.632|
000032  8088              STRH     r0,[r1,#4]
;;;223    						if(Reg.cnt<245)Reg.cnt++;
000034  4608              MOV      r0,r1
000036  7800              LDRB     r0,[r0,#0]  ; Reg
000038  28f5              CMP      r0,#0xf5
00003a  da03              BGE      |L3.68|
00003c  4608              MOV      r0,r1
00003e  7800              LDRB     r0,[r0,#0]  ; Reg
000040  1c40              ADDS     r0,r0,#1
000042  7008              STRB     r0,[r1,#0]
                  |L3.68|
;;;224    						Reg.wait=1; 
000044  2001              MOVS     r0,#1
000046  498c              LDR      r1,|L3.632|
000048  7048              STRB     r0,[r1,#1]
00004a  e008              B        |L3.94|
                  |L3.76|
;;;225    				}
;;;226    				else
;;;227    				{
;;;228    						if(Reg.time>0)Reg.time--;
00004c  488a              LDR      r0,|L3.632|
00004e  8880              LDRH     r0,[r0,#4]  ; Reg
000050  2800              CMP      r0,#0
000052  dd04              BLE      |L3.94|
000054  4888              LDR      r0,|L3.632|
000056  8880              LDRH     r0,[r0,#4]  ; Reg
000058  1e40              SUBS     r0,r0,#1
00005a  4987              LDR      r1,|L3.632|
00005c  8088              STRH     r0,[r1,#4]
                  |L3.94|
;;;229    				}
;;;230    	}
;;;231    	if((Dev.stu==DEV_REGISTER)&&(Reg.time==0)&&(Reg.fullflag==0))
00005e  4885              LDR      r0,|L3.628|
000060  7980              LDRB     r0,[r0,#6]  ; Dev
000062  2801              CMP      r0,#1
000064  d10a              BNE      |L3.124|
000066  4884              LDR      r0,|L3.632|
000068  8880              LDRH     r0,[r0,#4]  ; Reg
00006a  b938              CBNZ     r0,|L3.124|
00006c  4882              LDR      r0,|L3.632|
00006e  7880              LDRB     r0,[r0,#2]  ; Reg
000070  b920              CBNZ     r0,|L3.124|
;;;232    	{
;;;233    				IT1_Dev_Register();
000072  f7fffffe          BL       IT1_Dev_Register
;;;234    				Reg.wait=0;
000076  2000              MOVS     r0,#0
000078  497f              LDR      r1,|L3.632|
00007a  7048              STRB     r0,[r1,#1]
                  |L3.124|
;;;235    	}
;;;236    	//============================================================================
;;;237    	//Èç¹ûÊÇËø£¬±ØÐëÉÏ±¨Ò»´Î×´Ì¬
;;;238    	if((lock.report==0)&&(Dev.stu>DEV_REGISTER))
00007c  487f              LDR      r0,|L3.636|
00007e  7840              LDRB     r0,[r0,#1]  ; lock
000080  bb48              CBNZ     r0,|L3.214|
000082  487c              LDR      r0,|L3.628|
000084  7980              LDRB     r0,[r0,#6]  ; Dev
000086  2801              CMP      r0,#1
000088  dd25              BLE      |L3.214|
;;;239    	{
;;;240    				//1.²éÑ¯ÎÞÏßËøµÄ×´Ì¬
;;;241    				//2.Êµ¼ÊÖ´ÐÐÊ±ÓÐÎÞÏß×ª·¢ÉÏ±¨
;;;242    				IT1_Lock_DataLoad(0,0x01,0x01);
00008a  2201              MOVS     r2,#1
00008c  4611              MOV      r1,r2
00008e  2000              MOVS     r0,#0
000090  f7fffffe          BL       IT1_Lock_DataLoad
;;;243    		    //ÉÏ±¨Ö¸ÎÆÊ¹ÄÜºÍ½ûÖ¹×´Ì¬
;;;244    		    for(i=0;i<8;i++)
000094  2400              MOVS     r4,#0
000096  e01c              B        |L3.210|
                  |L3.152|
;;;245    				{
;;;246    					  lin=i/8;
000098  4620              MOV      r0,r4
00009a  17e1              ASRS     r1,r4,#31
00009c  eb047151          ADD      r1,r4,r1,LSR #29
0000a0  f3c106c7          UBFX     r6,r1,#3,#8
;;;247    						row=i%8;
0000a4  17e1              ASRS     r1,r4,#31
0000a6  eb047151          ADD      r1,r4,r1,LSR #29
0000aa  10c9              ASRS     r1,r1,#3
0000ac  eba401c1          SUB      r1,r4,r1,LSL #3
0000b0  b2cf              UXTB     r7,r1
;;;248    						if((Pannel.item[0].onoffbuf[lin]&(0x01<<row))!=0x00)
0000b2  4873              LDR      r0,|L3.640|
0000b4  5d80              LDRB     r0,[r0,r6]
0000b6  2101              MOVS     r1,#1
0000b8  40b9              LSLS     r1,r1,r7
0000ba  4208              TST      r0,r1
0000bc  d007              BEQ      |L3.206|
;;;249    						{
;;;250    									DlyEvent_handle(i+1,0x04,0x01,1000);
0000be  1c61              ADDS     r1,r4,#1
0000c0  b2c8              UXTB     r0,r1
0000c2  f44f737a          MOV      r3,#0x3e8
0000c6  2201              MOVS     r2,#1
0000c8  2104              MOVS     r1,#4
0000ca  f7fffffe          BL       DlyEvent_handle
                  |L3.206|
0000ce  1c60              ADDS     r0,r4,#1              ;244
0000d0  b2c4              UXTB     r4,r0                 ;244
                  |L3.210|
0000d2  2c08              CMP      r4,#8                 ;244
0000d4  dbe0              BLT      |L3.152|
                  |L3.214|
;;;251    						}
;;;252    				}
;;;253    	}
;;;254    	//============================================================================			
;;;255    	//ÒÔÏÂÃ¿100mSµ÷ÓÃ	
;;;256    	if(t10ms>=10)
0000d6  4865              LDR      r0,|L3.620|
0000d8  7800              LDRB     r0,[r0,#0]  ; t10ms
0000da  280a              CMP      r0,#0xa
0000dc  db73              BLT      |L3.454|
;;;257    	{
;;;258    		  t10ms=0;
0000de  2000              MOVS     r0,#0
0000e0  4962              LDR      r1,|L3.620|
0000e2  7008              STRB     r0,[r1,#0]
;;;259    		  Dev.rand++;
0000e4  4863              LDR      r0,|L3.628|
0000e6  79c0              LDRB     r0,[r0,#7]  ; Dev
0000e8  1c40              ADDS     r0,r0,#1
0000ea  4962              LDR      r1,|L3.628|
0000ec  71c8              STRB     r0,[r1,#7]
;;;260    			t100ms++;
0000ee  4865              LDR      r0,|L3.644|
0000f0  7800              LDRB     r0,[r0,#0]  ; t100ms
0000f2  1c40              ADDS     r0,r0,#1
0000f4  4963              LDR      r1,|L3.644|
0000f6  7008              STRB     r0,[r1,#0]
;;;261    		   if(lock.setkeytime>0)lock.setkeytime--;
0000f8  4860              LDR      r0,|L3.636|
0000fa  7880              LDRB     r0,[r0,#2]  ; lock
0000fc  2800              CMP      r0,#0
0000fe  dd04              BLE      |L3.266|
000100  485e              LDR      r0,|L3.636|
000102  7880              LDRB     r0,[r0,#2]  ; lock
000104  1e40              SUBS     r0,r0,#1
000106  495d              LDR      r1,|L3.636|
000108  7088              STRB     r0,[r1,#2]
                  |L3.266|
;;;262    		  if((Dev.err & ERR_RESET)==0x00)IWDG_Feed();										//Î¹¹·100ms
00010a  485a              LDR      r0,|L3.628|
00010c  7b80              LDRB     r0,[r0,#0xe]  ; Dev
00010e  f0100f08          TST      r0,#8
000112  d101              BNE      |L3.280|
000114  f7fffffe          BL       IWDG_Feed
                  |L3.280|
;;;263    		
;;;264    		  //===========================================================================
;;;265    		  //ºìÍâÅäÖÃÊ±¼äÏÞ¶¨
;;;266    		  if(Ir.sendtime>0)Ir.sendtime--;
000118  4855              LDR      r0,|L3.624|
00011a  89c0              LDRH     r0,[r0,#0xe]  ; Ir
00011c  2800              CMP      r0,#0
00011e  dd04              BLE      |L3.298|
000120  4853              LDR      r0,|L3.624|
000122  89c0              LDRH     r0,[r0,#0xe]  ; Ir
000124  1e40              SUBS     r0,r0,#1
000126  4952              LDR      r1,|L3.624|
000128  81c8              STRH     r0,[r1,#0xe]
                  |L3.298|
;;;267    		  if((Ir.sendtime==0)&&(Ir.flag==1))Ir.flag=0;
00012a  4851              LDR      r0,|L3.624|
00012c  89c0              LDRH     r0,[r0,#0xe]  ; Ir
00012e  b930              CBNZ     r0,|L3.318|
000130  484f              LDR      r0,|L3.624|
000132  7840              LDRB     r0,[r0,#1]  ; Ir
000134  2801              CMP      r0,#1
000136  d102              BNE      |L3.318|
000138  2000              MOVS     r0,#0
00013a  494d              LDR      r1,|L3.624|
00013c  7048              STRB     r0,[r1,#1]
                  |L3.318|
;;;268    		  //===========================================================================
;;;269    			//===========================================================================
;;;270    			//°´¼üÅÐ¶Ï
;;;271    			key=bsp_GetKey();
00013e  f7fffffe          BL       bsp_GetKey
000142  4605              MOV      r5,r0
;;;272    			if(key!=0x00)
000144  b3f5              CBZ      r5,|L3.452|
;;;273    			{
;;;274    							if(key==1)
000146  2d01              CMP      r5,#1
000148  d10f              BNE      |L3.362|
;;;275    							{
;;;276    									//Ir_SetupLoad_Test();			//²âÊÔ Ä£Äâ·¢ËÍºìÍâÊý¾Ý
;;;277    								  //¿ØÖÆ×ª·¢Æ÷½øÈëÑ§Ï°54¼üÒ£¿ØÆ÷×´Ì¬
;;;278    									if((Dev.type&0xf000)==0x3000)
00014a  484a              LDR      r0,|L3.628|
00014c  8880              LDRH     r0,[r0,#4]  ; Dev
00014e  f4004070          AND      r0,r0,#0xf000
000152  f5b05f40          CMP      r0,#0x3000
000156  d102              BNE      |L3.350|
;;;279    									{
;;;280    												IT1_LearnLock();
000158  f7fffffe          BL       IT1_LearnLock
00015c  e037              B        |L3.462|
                  |L3.350|
;;;281    									}
;;;282    									else
;;;283    									{
;;;284    												//IT1_Learn54Key();
;;;285    												RegTimeClr();
00015e  f7fffffe          BL       RegTimeClr
;;;286    												Dev.stu=DEV_REGISTER;				//ÖØÐÂ×¢²á
000162  2001              MOVS     r0,#1
000164  4943              LDR      r1,|L3.628|
000166  7188              STRB     r0,[r1,#6]
000168  e031              B        |L3.462|
                  |L3.362|
;;;287    									}
;;;288    							}
;;;289    							else if(key==3)
00016a  2d03              CMP      r5,#3
00016c  d12f              BNE      |L3.462|
;;;290    							{
;;;291    									
;;;292    								  //54¼üÒ£¿ØÆ÷Ò²ÓÐ±¾ÉíÉ¾³ý
;;;293    									//IT1_IR_UnLoadToWireless(0xff,0xff);
;;;294    									if((Dev.type&0xf000)==0xb000)
00016e  4841              LDR      r0,|L3.628|
000170  8880              LDRH     r0,[r0,#4]  ; Dev
000172  f4004070          AND      r0,r0,#0xf000
000176  f5b04f30          CMP      r0,#0xb000
00017a  d105              BNE      |L3.392|
;;;295    									{
;;;296    											//É¾³ý±¾Éí±í¸ñ
;;;297    											Init_Pannel_Table();
00017c  f7fffffe          BL       Init_Pannel_Table
;;;298    											//É¾³ýµØÖ·
;;;299    											Init_Ex_Table(ALL);
000180  20ff              MOVS     r0,#0xff
000182  f7fffffe          BL       Init_Ex_Table
000186  e009              B        |L3.412|
                  |L3.392|
;;;300    									}
;;;301    									else if((Dev.type&0xf000)==0x3000)
000188  483a              LDR      r0,|L3.628|
00018a  8880              LDRH     r0,[r0,#4]  ; Dev
00018c  f4004070          AND      r0,r0,#0xf000
000190  f5b05f40          CMP      r0,#0x3000
000194  d102              BNE      |L3.412|
;;;302    									{
;;;303    											//É¾³ýËø±í¸ñ
;;;304    											Init_Lock_Table(ALL);
000196  20ff              MOVS     r0,#0xff
000198  f7fffffe          BL       Init_Lock_Table
                  |L3.412|
;;;305    									}
;;;306    								  Dev.learn_time=0;
00019c  2000              MOVS     r0,#0
00019e  4935              LDR      r1,|L3.628|
0001a0  72c8              STRB     r0,[r1,#0xb]
;;;307    									Dev.encode_time=0;
0001a2  7308              STRB     r0,[r1,#0xc]
;;;308    									Dev.stu=DEV_NORMAL;
0001a4  2002              MOVS     r0,#2
0001a6  7188              STRB     r0,[r1,#6]
;;;309    								  Led_set(0,25,25,8,1);
0001a8  2001              MOVS     r0,#1
0001aa  2308              MOVS     r3,#8
0001ac  2219              MOVS     r2,#0x19
0001ae  4611              MOV      r1,r2
0001b0  9000              STR      r0,[sp,#0]
0001b2  2000              MOVS     r0,#0
0001b4  f7fffffe          BL       Led_set
;;;310    								  Led_set(1,25,25,8,2);
0001b8  2002              MOVS     r0,#2
0001ba  2308              MOVS     r3,#8
0001bc  2219              MOVS     r2,#0x19
0001be  4611              MOV      r1,r2
0001c0  9000              STR      r0,[sp,#0]
0001c2  e001              B        |L3.456|
                  |L3.452|
0001c4  e003              B        |L3.462|
                  |L3.454|
0001c6  e050              B        |L3.618|
                  |L3.456|
0001c8  2001              MOVS     r0,#1
0001ca  f7fffffe          BL       Led_set
                  |L3.462|
;;;311    							}
;;;312    		  }
;;;313    			//=============================================================================
;;;314    			//ÑÓÊ±´¦Àí
;;;315    			IT1_Dlytime_Handle();
0001ce  f7fffffe          BL       IT1_Dlytime_Handle
;;;316    			//=============================================================================
;;;317    			//ÐÅºÅ»º³å´¦Àí 100mS
;;;318    			Msg_hanndle();
0001d2  f7fffffe          BL       Msg_hanndle
;;;319    			//=============================================================================
;;;320    			//ÒÔÏÂÃ¿1000mS´¦Àí
;;;321    		  if(t100ms>=10)
0001d6  482b              LDR      r0,|L3.644|
0001d8  7800              LDRB     r0,[r0,#0]  ; t100ms
0001da  280a              CMP      r0,#0xa
0001dc  db45              BLT      |L3.618|
;;;322    			{
;;;323    						t100ms=0;		
0001de  2000              MOVS     r0,#0
0001e0  4928              LDR      r1,|L3.644|
0001e2  7008              STRB     r0,[r1,#0]
;;;324    				    //======================================================================
;;;325    				    //Ê±¼äÀÛ»ý
;;;326    						ttest++;
0001e4  4828              LDR      r0,|L3.648|
0001e6  7800              LDRB     r0,[r0,#0]  ; ttest
0001e8  1c40              ADDS     r0,r0,#1
0001ea  4927              LDR      r1,|L3.648|
0001ec  7008              STRB     r0,[r1,#0]
;;;327    				    if(ttest>=2)										//²âÊÔÓÃ
0001ee  4608              MOV      r0,r1
0001f0  7800              LDRB     r0,[r0,#0]  ; ttest
0001f2  2802              CMP      r0,#2
0001f4  db01              BLT      |L3.506|
;;;328    						{
;;;329    							    ttest=0;
0001f6  2000              MOVS     r0,#0
0001f8  7008              STRB     r0,[r1,#0]
                  |L3.506|
;;;330    									//Wireless_Data_Send(0,0);
;;;331    									//wl_test_send();  //ceshi
;;;332    									//Wireless_Lock_Action(0,0xcf);
;;;333    						}
;;;334    				    //=======================================================================
;;;335    				    if(lock.waittime>0)lock.waittime--;
0001fa  4820              LDR      r0,|L3.636|
0001fc  7b00              LDRB     r0,[r0,#0xc]  ; lock
0001fe  2800              CMP      r0,#0
000200  dd04              BLE      |L3.524|
000202  481e              LDR      r0,|L3.636|
000204  7b00              LDRB     r0,[r0,#0xc]  ; lock
000206  1e40              SUBS     r0,r0,#1
000208  491c              LDR      r1,|L3.636|
00020a  7308              STRB     r0,[r1,#0xc]
                  |L3.524|
;;;336    						if(Dev.power_time<100)Dev.power_time++;						// ÉÏµçÊ±¼ä			
00020c  4819              LDR      r0,|L3.628|
00020e  7a40              LDRB     r0,[r0,#9]  ; Dev
000210  2864              CMP      r0,#0x64
000212  da04              BGE      |L3.542|
000214  4817              LDR      r0,|L3.628|
000216  7a40              LDRB     r0,[r0,#9]  ; Dev
000218  1c40              ADDS     r0,r0,#1
00021a  4916              LDR      r1,|L3.628|
00021c  7248              STRB     r0,[r1,#9]
                  |L3.542|
;;;337    				    if(Dev.encode_time>0)Dev.encode_time--;						//¶ÔÂëÊ±¼ä
00021e  4815              LDR      r0,|L3.628|
000220  7b00              LDRB     r0,[r0,#0xc]  ; Dev
000222  2800              CMP      r0,#0
000224  dd04              BLE      |L3.560|
000226  4813              LDR      r0,|L3.628|
000228  7b00              LDRB     r0,[r0,#0xc]  ; Dev
00022a  1e40              SUBS     r0,r0,#1
00022c  4911              LDR      r1,|L3.628|
00022e  7308              STRB     r0,[r1,#0xc]
                  |L3.560|
;;;338    						if(Dev.learn_time>0)Dev.learn_time--;							//Ñ§ÂëÊ±¼ä			
000230  4810              LDR      r0,|L3.628|
000232  7ac0              LDRB     r0,[r0,#0xb]  ; Dev
000234  2800              CMP      r0,#0
000236  dd04              BLE      |L3.578|
000238  480e              LDR      r0,|L3.628|
00023a  7ac0              LDRB     r0,[r0,#0xb]  ; Dev
00023c  1e40              SUBS     r0,r0,#1
00023e  490d              LDR      r1,|L3.628|
000240  72c8              STRB     r0,[r1,#0xb]
                  |L3.578|
;;;339    						if((Dev.stu==DEV_SETUP)&&(Dev.encode_time==0)&&(Dev.learn_time==0))
000242  480c              LDR      r0,|L3.628|
000244  7980              LDRB     r0,[r0,#6]  ; Dev
000246  2803              CMP      r0,#3
000248  d10f              BNE      |L3.618|
00024a  480a              LDR      r0,|L3.628|
00024c  7b00              LDRB     r0,[r0,#0xc]  ; Dev
00024e  b960              CBNZ     r0,|L3.618|
000250  4808              LDR      r0,|L3.628|
000252  7ac0              LDRB     r0,[r0,#0xb]  ; Dev
000254  b948              CBNZ     r0,|L3.618|
;;;340    						{
;;;341    								Dev.stu=DEV_NORMAL;
000256  2002              MOVS     r0,#2
000258  4906              LDR      r1,|L3.628|
00025a  7188              STRB     r0,[r1,#6]
;;;342    								Led_set(1,25,25,1,2);	
00025c  2301              MOVS     r3,#1
00025e  2219              MOVS     r2,#0x19
000260  4611              MOV      r1,r2
000262  9000              STR      r0,[sp,#0]
000264  4618              MOV      r0,r3
000266  f7fffffe          BL       Led_set
                  |L3.618|
;;;343    						}
;;;344    						//=======================================================================
;;;345    			}
;;;346    
;;;347    	}
;;;348    }
00026a  bdf8              POP      {r3-r7,pc}
;;;349    
                          ENDP

                  |L3.620|
                          DCD      t10ms
                  |L3.624|
                          DCD      ||Ir||
                  |L3.628|
                          DCD      ||Dev||
                  |L3.632|
                          DCD      ||Reg||
                  |L3.636|
                          DCD      lock
                  |L3.640|
                          DCD      Pannel+0x9
                  |L3.644|
                          DCD      t100ms
                  |L3.648|
                          DCD      ttest

                          AREA ||i.AppTask_WirelessRecv||, CODE, READONLY, ALIGN=1

                  AppTask_WirelessRecv PROC
;;;161    */
;;;162    void AppTask_WirelessRecv(void)
000000  b510              PUSH     {r4,lr}
;;;163    {
;;;164    		//static uint8_t cnt1=0;
;;;165    	
;;;166    	   //cnt1++;
;;;167    	   //if(cnt1>=10)
;;;168    		 {
;;;169    		 //	    cnt1=0;
;;;170    					Wireless_Recv();																				//Ã»10ms²éÑ¯Ò»´Î			
000002  f7fffffe          BL       Wireless_Recv
;;;171    		 }
;;;172    }
000006  bd10              POP      {r4,pc}
;;;173    
                          ENDP


                          AREA ||i.AppTask_WirelessSend||, CODE, READONLY, ALIGN=2

                  AppTask_WirelessSend PROC
;;;181    */
;;;182    void AppTask_WirelessSend(void)
000000  b510              PUSH     {r4,lr}
;;;183    {
;;;184    		static uint8_t cnt=0;
;;;185    	  //uint8_t buf[16];
;;;186    	
;;;187    	  cnt++;
000002  4807              LDR      r0,|L5.32|
000004  7800              LDRB     r0,[r0,#0]  ; cnt
000006  1c40              ADDS     r0,r0,#1
000008  4905              LDR      r1,|L5.32|
00000a  7008              STRB     r0,[r1,#0]
;;;188    	  if(cnt>=5)
00000c  4608              MOV      r0,r1
00000e  7800              LDRB     r0,[r0,#0]  ; cnt
000010  2805              CMP      r0,#5
000012  db03              BLT      |L5.28|
;;;189    		{
;;;190    				cnt=0;
000014  2000              MOVS     r0,#0
000016  7008              STRB     r0,[r1,#0]
;;;191    				Wireless_Send();																				//Ã»100ms²éÑ¯Ò»´Î
000018  f7fffffe          BL       Wireless_Send
                  |L5.28|
;;;192    		}
;;;193    }
00001c  bd10              POP      {r4,pc}
;;;194    
                          ENDP

00001e  0000              DCW      0x0000
                  |L5.32|
                          DCD      ||cnt||

                          AREA ||i.Check_Frame_Interval||, CODE, READONLY, ALIGN=2

                  Check_Frame_Interval PROC
;;;142    //===============================================================================================
;;;143    void Check_Frame_Interval(void)
000000  b510              PUSH     {r4,lr}
;;;144    {
;;;145    		if(Bus.interval<100)Bus.interval++;
000002  480d              LDR      r0,|L6.56|
000004  78c0              LDRB     r0,[r0,#3]  ; Bus
000006  2864              CMP      r0,#0x64
000008  da04              BGE      |L6.20|
00000a  480b              LDR      r0,|L6.56|
00000c  78c0              LDRB     r0,[r0,#3]  ; Bus
00000e  1c40              ADDS     r0,r0,#1
000010  4909              LDR      r1,|L6.56|
000012  70c8              STRB     r0,[r1,#3]
                  |L6.20|
;;;146        if(Bus.interval==20)
000014  4808              LDR      r0,|L6.56|
000016  78c0              LDRB     r0,[r0,#3]  ; Bus
000018  2814              CMP      r0,#0x14
00001a  d106              BNE      |L6.42|
;;;147    	  {
;;;148    				Bsp_Get_UsartData(&RxDat.buf[0],&RxDat.cnt);
00001c  4907              LDR      r1,|L6.60|
00001e  1c88              ADDS     r0,r1,#2
000020  f7fffffe          BL       Bsp_Get_UsartData
;;;149    				Bus.rxok=1;																								//½ÓÊÕµ½Ò»Ö¡Êý¾Ý
000024  2001              MOVS     r0,#1
000026  4904              LDR      r1,|L6.56|
000028  7208              STRB     r0,[r1,#8]
                  |L6.42|
;;;150    		}		
;;;151    	  bsp_StartHardTimer(1,100,Check_Frame_Interval);
00002a  f2af022b          ADR      r2,Check_Frame_Interval + 1
00002e  2164              MOVS     r1,#0x64
000030  2001              MOVS     r0,#1
000032  f7fffffe          BL       bsp_StartHardTimer
;;;152    }
000036  bd10              POP      {r4,pc}
;;;153    
                          ENDP

                  |L6.56|
                          DCD      Bus
                  |L6.60|
                          DCD      RxDat

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;35     */
;;;36     int main(void)
000000  b508              PUSH     {r3,lr}
;;;37     {
;;;38     	NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x1800);
000002  f44f51c0          MOV      r1,#0x1800
000006  f04f6000          MOV      r0,#0x8000000
00000a  f7fffffe          BL       NVIC_SetVectorTable
;;;39     	
;;;40     	
;;;41     	bsp_Init();		    /* Ó²¼þ³õÊ¼»¯ */
00000e  f7fffffe          BL       bsp_Init
;;;42     	Dev_Init();				//
000012  f7fffffe          BL       Dev_Init
;;;43     		
;;;44     	/* Ìí¼Ó ¸öÈÎÎñ */
;;;45     	//hSCH_Add_Task(AppTask_RivalrySend, 1, 1, 1);           		//¾ºÕù·¢ËÍÈÎÎñ Ã¿2mSµ÷ÓÃÒ»´Î
;;;46     	hSCH_Add_Task(taskRxProcess, 2, 10, 1);  								 		//½ÓÊÕÈÎÎñ Ã¿10mSµ÷ÓÃÒ»´Î
000016  2301              MOVS     r3,#1
000018  220a              MOVS     r2,#0xa
00001a  2102              MOVS     r1,#2
00001c  481e              LDR      r0,|L7.152|
00001e  f7fffffe          BL       hSCH_Add_Task
;;;47     	hSCH_Add_Task(AppTask_WirelessRecv, 3, 10, 1);        		 	//ÎÞÏß½ÓÊÕÈÎÎñ
000022  2301              MOVS     r3,#1
000024  220a              MOVS     r2,#0xa
000026  2103              MOVS     r1,#3
000028  481c              LDR      r0,|L7.156|
00002a  f7fffffe          BL       hSCH_Add_Task
;;;48     	hSCH_Add_Task(AppTask_WirelessSend, 3, 20, 1);        	 		//ÎÞÏß·¢ËÍÈÎÎñ
00002e  2301              MOVS     r3,#1
000030  2214              MOVS     r2,#0x14
000032  2103              MOVS     r1,#3
000034  481a              LDR      r0,|L7.160|
000036  f7fffffe          BL       hSCH_Add_Task
;;;49     	
;;;50     	hSCH_Add_Task(AppTask_Run, 4, 10, 1);        						 		//ÔËÐÐÈÎÎñ //Ã¿10mSµ÷ÓÃÒ»´Î
00003a  2301              MOVS     r3,#1
00003c  220a              MOVS     r2,#0xa
00003e  2104              MOVS     r1,#4
000040  4818              LDR      r0,|L7.164|
000042  f7fffffe          BL       hSCH_Add_Task
;;;51     	
;;;52     	Led_set(0,100,100,3,1);	
000046  2001              MOVS     r0,#1
000048  2303              MOVS     r3,#3
00004a  2264              MOVS     r2,#0x64
00004c  4611              MOV      r1,r2
00004e  9000              STR      r0,[sp,#0]
000050  2000              MOVS     r0,#0
000052  f7fffffe          BL       Led_set
;;;53       Led_set(1,100,100,3,2);		
000056  2002              MOVS     r0,#2
000058  2303              MOVS     r3,#3
00005a  2264              MOVS     r2,#0x64
00005c  4611              MOV      r1,r2
00005e  9000              STR      r0,[sp,#0]
000060  2001              MOVS     r0,#1
000062  f7fffffe          BL       Led_set
;;;54     	
;;;55     	bsp_StartHardTimer(1,100,Check_Frame_Interval);							//Ã¿100uSµ÷ÓÃÒ»´ÎÖ¡¼ä¸ô¼ì²â	
000066  4a10              LDR      r2,|L7.168|
000068  2164              MOVS     r1,#0x64
00006a  2001              MOVS     r0,#1
00006c  f7fffffe          BL       bsp_StartHardTimer
;;;56     																																				
;;;57     	__set_PRIMASK(0);										//¿ªÆô×ÜÖÐ¶Ï
000070  2000              MOVS     r0,#0
000072  f3808810          MSR      PRIMASK,r0
000076  bf00              NOP      
;;;58     	
;;;59     	//======================================================================
;;;60     	//²»ÒªÅ²¶¯Î»ÖÃ
;;;61     	bsp_InitIwdg(2000);																				//Ê¹ÄÜ¿´ÃÅ¹·
000078  f44f60fa          MOV      r0,#0x7d0
00007c  f7fffffe          BL       bsp_InitIwdg
;;;62     	if((Dev.err & ERR_RESET)==0x00)IWDG_Feed();
000080  480a              LDR      r0,|L7.172|
000082  7b80              LDRB     r0,[r0,#0xe]  ; Dev
000084  f0100f08          TST      r0,#8
000088  d101              BNE      |L7.142|
00008a  f7fffffe          BL       IWDG_Feed
                  |L7.142|
;;;63     	//=======================================================================
;;;64     
;;;65     	/* ½øÈëÖ÷³ÌÐòÑ­»·Ìå */
;;;66     	while (1)
00008e  e001              B        |L7.148|
                  |L7.144|
;;;67     	{
;;;68     		/* ÈÎÎñÖ´ÐÐº¯Êý */
;;;69     		hSCH_Dispatch_Tasks();
000090  f7fffffe          BL       hSCH_Dispatch_Tasks
                  |L7.148|
000094  e7fc              B        |L7.144|
;;;70     	}
;;;71     }
;;;72     
                          ENDP

000096  0000              DCW      0x0000
                  |L7.152|
                          DCD      taskRxProcess
                  |L7.156|
                          DCD      AppTask_WirelessRecv
                  |L7.160|
                          DCD      AppTask_WirelessSend
                  |L7.164|
                          DCD      AppTask_Run
                  |L7.168|
                          DCD      Check_Frame_Interval
                  |L7.172|
                          DCD      ||Dev||

                          AREA ||i.taskRxProcess||, CODE, READONLY, ALIGN=2

                  taskRxProcess PROC
;;;93     */
;;;94     static void taskRxProcess(void)
000000  b510              PUSH     {r4,lr}
;;;95     {
;;;96     
;;;97     	if((Bus.SelfSend==0)&&(Bus.rxok==1))
000002  480e              LDR      r0,|L8.60|
000004  7840              LDRB     r0,[r0,#1]  ; Bus
000006  b9b8              CBNZ     r0,|L8.56|
000008  480c              LDR      r0,|L8.60|
00000a  7a00              LDRB     r0,[r0,#8]  ; Bus
00000c  2801              CMP      r0,#1
00000e  d113              BNE      |L8.56|
;;;98     	{
;;;99     		Bus.rxok=0;
000010  2000              MOVS     r0,#0
000012  490a              LDR      r1,|L8.60|
000014  7208              STRB     r0,[r1,#8]
;;;100    
;;;101    		IT1_ParseFrame();	
000016  f7fffffe          BL       IT1_ParseFrame
;;;102    		
;;;103    		Bus.distime=3;												//×ÜÏß×èÈû
00001a  2003              MOVS     r0,#3
00001c  4907              LDR      r1,|L8.60|
00001e  80c8              STRH     r0,[r1,#6]
;;;104    		    
;;;105    		//Èç¹ûÓÐÓ¦´ðÒªÇó£¬ÔòÓ¦´ð(´Ë´¦Ö±½ÓÓ¦´ð£¬²»ÅÐ¶Ï×ÜÏß)
;;;106    		if(TxDat.f_tx==1)
000020  4807              LDR      r0,|L8.64|
000022  7880              LDRB     r0,[r0,#2]  ; TxDat
000024  2801              CMP      r0,#1
000026  d107              BNE      |L8.56|
;;;107    		{					
;;;108    					RS485_Send(TxDat.buf,TxDat.cnt);								
000028  4805              LDR      r0,|L8.64|
00002a  7801              LDRB     r1,[r0,#0]  ; TxDat
00002c  1cc0              ADDS     r0,r0,#3
00002e  f7fffffe          BL       RS485_Send
;;;109    		    	TxDat.f_tx=0;		
000032  2000              MOVS     r0,#0
000034  4902              LDR      r1,|L8.64|
000036  7088              STRB     r0,[r1,#2]
                  |L8.56|
;;;110    		}
;;;111    	}
;;;112    }
000038  bd10              POP      {r4,pc}
;;;113    
                          ENDP

00003a  0000              DCW      0x0000
                  |L8.60|
                          DCD      Bus
                  |L8.64|
                          DCD      TxDat

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ||Dev||
                          %        18
                  Exchangebuf
                          %        14
                  Ex_Table
                          %        166
                  lock
                          %        100
                  LockItem
                          %        86
                  Scene
                          %        6416
                  Pannel
                          %        122
                  NewRegType
                          %        34
                  Array
                          %        64
                  Dly_Table
                          %        82
                  RxDat
                          %        203
                  TxDat
                          %        105
                  Bus
                          %        10
                  ||Ir||
                          %        224
                  RS485_Queue
                          %        2480
                  WirelessSend_Queue
                          %        2480
                  DlyTable
                          %        25

                          AREA ||.data||, DATA, ALIGN=1

                  ||cnt||
000000  00                DCB      0x00
                  t10ms
000001  00                DCB      0x00
                  t100ms
000002  00                DCB      0x00
                  ttest
000003  00                DCB      0x00
                  ||Reg||
                          DCDU     0x00000000
000008  0000              DCB      0x00,0x00
                  IT2_INFO
00000a  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000010  0000              DCB      0x00,0x00
                  Time
000012  0000              DCB      0x00,0x00
                          DCDU     0x00000000
000018  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 128
|__asm___6_main_c_main____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
