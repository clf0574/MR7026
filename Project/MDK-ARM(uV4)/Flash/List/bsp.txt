; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outupt\bsp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=..\outupt\bsp.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\outupt\bsp.crf ..\..\User\bsp\bsp.c]
                          THUMB

                          AREA ||i.bsp_Idle||, CODE, READONLY, ALIGN=1

                  bsp_Idle PROC
;;;107    */
;;;108    void bsp_Idle(void)
000000  4770              BX       lr
;;;109    {
;;;110    	/* --- 喂狗 */
;;;111    
;;;112    	/* --- 让CPU进入休眠，由Systick定时中断唤醒或者其他中断唤醒 */
;;;113    
;;;114    	/* 对于 emWin 图形库，可以插入图形库需要的轮询函数 */
;;;115    	//GUI_Exec();
;;;116    
;;;117    	/* 对于 uIP 协议实现，可以插入uip轮询函数 */
;;;118    }
;;;119    
                          ENDP


                          AREA ||i.bsp_Init||, CODE, READONLY, ALIGN=1

                  bsp_Init PROC
;;;33     */
;;;34     void bsp_Init(void)
000000  b510              PUSH     {r4,lr}
;;;35     {
;;;36     	/*
;;;37     		由于ST固件库的启动文件已经执行了CPU系统时钟的初始化，所以不必再次重复配置系统时钟。
;;;38     		启动文件配置了CPU主时钟频率、内部Flash访问速度和可选的外部SRAM FSMC初始化。
;;;39     
;;;40     		系统时钟缺省配置为72MHz，如果需要更改，可以修改 system_stm32f10x.c 文件
;;;41     	*/
;;;42     	
;;;43     	/* 优先级分组设置为4, 优先配置好NVIC */
;;;44     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);
000002  f44f7040          MOV      r0,#0x300
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;45     
;;;46     	bsp_InitLed(); 			/* 初始LED指示灯端口 */
00000a  f7fffffe          BL       bsp_InitLed
;;;47       	bsp_InitUart(1); 			/* 初始化串口 */
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       bsp_InitUart
;;;48     	bsp_InitKey();      		/* 初始化按键 */
000014  f7fffffe          BL       bsp_InitKey
;;;49     	bsp_EepromInit();		//初始化eeprom
000018  f7fffffe          BL       bsp_EepromInit
;;;50     	
;;;51     	#ifdef USE_A7139
;;;52     	bsp_InitRF(1);			//初始化A7139
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       bsp_InitRF
;;;53     	#else
;;;54     	bsp_InitCC1101();		//初始化CC1101
;;;55     	#endif
;;;56     	
;;;57     	bsp_InitTimer();
000022  f7fffffe          BL       bsp_InitTimer
;;;58     	bsp_InitMsg();
000026  f7fffffe          BL       bsp_InitMsg
;;;59     	
;;;60     	//===========================================================================
;;;61     	//选择加密芯片
;;;62       #ifdef USE_DS28E02
;;;63     	bsp_DS28E02_Init();
;;;64     	#else
;;;65     	bsp_Init28E11();
00002a  f7fffffe          BL       bsp_Init28E11
;;;66     	#endif
;;;67     	//===========================================================================
;;;68     }
00002e  bd10              POP      {r4,pc}
;;;69     
                          ENDP


                          AREA ||i.bsp_RunPer10ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer10ms PROC
;;;78     */
;;;79     void bsp_RunPer10ms(void)
000000  4770              BX       lr
;;;80     {
;;;81     
;;;82     }
;;;83     
                          ENDP


                          AREA ||i.bsp_RunPer1ms||, CODE, READONLY, ALIGN=1

                  bsp_RunPer1ms PROC
;;;92     */
;;;93     void bsp_RunPer1ms(void)
000000  b510              PUSH     {r4,lr}
;;;94     {
;;;95     	hSCH_Update();
000002  f7fffffe          BL       hSCH_Update
;;;96     	AppTask_BusMonitor();						//总线监控
000006  f7fffffe          BL       AppTask_BusMonitor
;;;97     }
00000a  bd10              POP      {r4,pc}
;;;98     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\bsp.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_bsp_c_bsp_Init____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_bsp_c_bsp_Init____REVSH|
#line 128
|__asm___5_bsp_c_bsp_Init____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
